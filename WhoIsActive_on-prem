


	with ex as 
	(
		SELECT 
			(select name from sys.databases where database_id = req.database_id) as dbName,
			sqltext.TEXT,
			req.session_id,
			blocking_session_id,
			req.status,
			req.command,
			req.cpu_time,
			req.total_elapsed_time,
			cast(req.total_elapsed_time / (1000.0) as bigint) 'Elapsed Time (in Sec)',
			cast(req.total_elapsed_time / (1000.0) / 60 as bigint) 'Elapsed Time (in Min)',
			cast(req.total_elapsed_time / (1000.0) / 60 / 60 as bigint) 'Elapsed Time (in Hrs)',
			open_transaction_count, 
			req.logical_reads, req.reads, req.writes,
			wait_type, 
			last_wait_type,
			plan_handle, 
			sql_handle
		FROM 
			sys.dm_exec_requests req
			CROSS APPLY sys.dm_exec_sql_text(sql_handle) AS sqltext
			
	)
	select * from ex
	--where [text] like '%broad%'
	order by 1,total_elapsed_time desc;




--KILL [session_id]


--> blockers:

	SELECT
		s.login_name
		,r.blocking_session_id 'blocked by'
		,s.session_id
		,s.login_time 
		,s.last_request_end_time
		,r.total_elapsed_time / (1000.0) 'Elapsed Time (in Sec)'
		,cast(r.total_elapsed_time / (1000.0) / 60 as bigint) 'Elapsed Time (in Min)'
		,r.STATUS
		,Substring(st.TEXT, (r.statement_start_offset / 2) + 1, (
				(
					CASE r.statement_end_offset
						WHEN - 1
							THEN Datalength(st.TEXT)
						ELSE r.statement_end_offset
						END - r.statement_start_offset
					) / 2
				) + 1) AS statement_text
		,Coalesce(Quotename(Db_name(st.dbid)) + N'.' + Quotename(Object_schema_name(st.objectid, st.dbid)) + N'.' + 
		 Quotename(Object_name(st.objectid, st.dbid)), '') AS command_text
		,r.command
		,s.host_name
		,s.program_name
		,r.wait_type
		,wait_resource
		,r.wait_time / (1000.0) 'Wait Time (in Sec)'
		,r.cpu_time
		,r.logical_reads
		,r.reads
		,r.writes
		,s.login_time
		,r.open_transaction_count
	FROM sys.dm_exec_sessions AS s
	INNER JOIN sys.dm_exec_requests AS r ON r.session_id = s.session_id
	CROSS APPLY sys.dm_exec_sql_text(r.sql_handle) AS st
	WHERE r.session_id != @@SPID
	ORDER BY
		 r.total_elapsed_time desc
		--r.cpu_time DESC
		--,r.STATUS
		--,r.blocking_session_id
		--,s.session_id;



		SELECT [Spid] = session_Id
	, ecid
	, [Database] = DB_NAME(sp.dbid)
	, [User] = nt_username
	, [Status] = er.status
	, [Wait] = wait_type
	, [Individual Query] = SUBSTRING (qt.text, 
             er.statement_start_offset/2,
	(CASE WHEN er.statement_end_offset = -1
	       THEN LEN(CONVERT(NVARCHAR(MAX), qt.text)) * 2
		ELSE er.statement_end_offset END - 
                                er.statement_start_offset)/2)
	,[Parent Query] = qt.text
	, Program = program_name
	, Hostname
	, nt_domain
	, start_time
    FROM sys.dm_exec_requests er
    INNER JOIN sys.sysprocesses sp ON er.session_id = sp.spid
    CROSS APPLY sys.dm_exec_sql_text(er.sql_handle)as qt
    WHERE session_Id > 50              -- Ignore system spids.
    AND session_Id NOT IN (@@SPID)     -- Ignore this current statement.
    ORDER BY 3,1, 2




